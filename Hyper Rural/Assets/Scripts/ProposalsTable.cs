// This code automatically generated by TableCodeGen
using UnityEngine;
using UnityEngine.UI;
using System.Collections;
using System.Collections.Generic;

public class ProposalsTable : MonoBehaviour
{
	public TextAsset File;
	public Text output;


	private void Start()
	{
		Load(File);

		// FINDING A PROPOSAL
		//Find_ID("9").Description;
		Debug.Log(Find_ID("9").Description);
	}
	public class Row
	{
		public string ID;
		public string Name;
		public string Description;
		public string Economy;
		public string Environment;
		public string Infrastructure;
		public string General_Happiness;

	}

	List<Row> rowList = new List<Row>();
	bool isLoaded = false;

	public bool IsLoaded()
	{
		return isLoaded;
	}

	public List<Row> GetRowList()
	{
		return rowList;
	}

	public void Load(TextAsset csv)
	{
		rowList.Clear();
		string[][] grid = CsvParser2.Parse(csv.text);
		for (int i = 1; i < grid.Length; i++)
		{
			Row row = new Row();
			row.ID = grid[i][0];
			row.Name = grid[i][1];
			row.Description = grid[i][2];
			row.Economy = grid[i][3];
			row.Environment = grid[i][4];
			row.Infrastructure = grid[i][5];
			row.General_Happiness = grid[i][6];

			rowList.Add(row);
		}
		isLoaded = true;
	}

	public int NumRows()
	{
		return rowList.Count;
	}

	public Row GetAt(int i)
	{
		if (rowList.Count <= i)
			return null;
		return rowList[i];
	}

	public Row Find_ID(string find)
	{
		return rowList.Find(x => x.ID == find);
	}
	public List<Row> FindAll_ID(string find)
	{
		return rowList.FindAll(x => x.ID == find);
	}
	public Row Find_Name(string find)
	{
		return rowList.Find(x => x.Name == find);
	}
	public List<Row> FindAll_Name(string find)
	{
		return rowList.FindAll(x => x.Name == find);
	}
	public Row Find_Description(string find)
	{
		return rowList.Find(x => x.Description == find);
	}
	public List<Row> FindAll_Description(string find)
	{
		return rowList.FindAll(x => x.Description == find);
	}
	public Row Find_Economy(string find)
	{
		return rowList.Find(x => x.Economy == find);
	}
	public List<Row> FindAll_Economy(string find)
	{
		return rowList.FindAll(x => x.Economy == find);
	}
	public Row Find_Environment(string find)
	{
		return rowList.Find(x => x.Environment == find);
	}
	public List<Row> FindAll_Environment(string find)
	{
		return rowList.FindAll(x => x.Environment == find);
	}
	public Row Find_Infrastructure(string find)
	{
		return rowList.Find(x => x.Infrastructure == find);
	}
	public List<Row> FindAll_Infrastructure(string find)
	{
		return rowList.FindAll(x => x.Infrastructure == find);
	}
	public Row Find_General_Happiness(string find)
	{
		return rowList.Find(x => x.General_Happiness == find);
	}
	public List<Row> FindAll_General_Happiness(string find)
	{
		return rowList.FindAll(x => x.General_Happiness == find);
	}

}